<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reading on itkq.jp</title><link>https://itkq.jp/tags/reading/</link><description>Recent content in Reading on itkq.jp</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Tue, 06 Mar 2018 00:24:12 +0900</lastBuildDate><atom:link href="https://itkq.jp/tags/reading/index.xml" rel="self" type="application/rss+xml"/><item><title>採用学を読んだ</title><link>https://itkq.jp/blog/2018/03/06/scientific-adopt/</link><pubDate>Tue, 06 Mar 2018 00:24:12 +0900</pubDate><guid>https://itkq.jp/blog/2018/03/06/scientific-adopt/</guid><description>&lt;p>採用学を読んだ。この本では、採用を定義した上で、現代の日本における採用事情の考察・最近の採用手法の変化・より良い採用のための考え方などが述べられており、一読すべき価値のある本だと思う。&lt;/p>
&lt;p>この記事では、一応新卒採用を経験した身として、就活時に浮かんだいくつかの疑問を、採用学を読んで上で改めて考えていく。それが正解かどうかは分からない。書き終えてみると当たり前のことを言っているようにも見える。&lt;/p></description></item><item><title>itamae コードリーディング</title><link>https://itkq.jp/blog/2017/03/19/itamae-reading/</link><pubDate>Sun, 19 Mar 2017 19:25:53 +0900</pubDate><guid>https://itkq.jp/blog/2017/03/19/itamae-reading/</guid><description>&lt;p>元々は NeoVim を導入しようとしていた．その一環で，dotfiles を良い感じにしようとしていて，mitamae によるプロビジョニング設定の &lt;a href="https://github.com/k0kubun/dotfiles" target="_blank">k0kubun/dotfiles&lt;/a> から fork したものを整理していた．NeoBundle の NeoVim 対応版である dein.vim を導入する際，curl が必要だった．itamae の Resource ドキュメントを読むと，&lt;code>http_request&lt;/code> というリソースがあった．これ使えば Docker の ADDコマンド的なことできるのかなと思ったけど詳細が書いてなくて，そういえば itamae 自体どうやって動いてるんだと気になったので読むことにした．&lt;/p>
&lt;p>&lt;a href="https://github.com/itamae-kitchen/itamae/" target="_blank">itamae-kitchen/itamae/&lt;/a>&lt;/p></description></item><item><title>SQL実践入門 読んだ</title><link>https://itkq.jp/blog/2017/03/15/sql-practice/</link><pubDate>Wed, 15 Mar 2017 19:19:27 +0900</pubDate><guid>https://itkq.jp/blog/2017/03/15/sql-practice/</guid><description>&lt;p>メモです．&lt;/p>
&lt;h1 id="3章-式の条件分岐">3章 式の条件分岐&lt;/h1>
&lt;ul>
&lt;li>SQLのパフォーマンスは，テーブルスキャンによる I/O を減らすことが重要．&lt;/li>
&lt;li>手続き的な &lt;code>WHERE&lt;/code>, &lt;code>UNION&lt;/code> による条件分岐，テーブルフルスキャンが複数回行われる．&lt;strong>同テーブル内&lt;/strong>では，&lt;code>SELECT&lt;/code> 句で &lt;code>CASE WHEN&lt;/code> で条件分岐させるとクエリの可読性，実行計画共に良くなることあるので，考えなしに &lt;code>UNION&lt;/code> を使うのは危険．&lt;/li>
&lt;li>ただし，インデックスが使える場合は，「&lt;code>UNION&lt;/code> による複数回のインデックススキャン」と「&lt;code>OR&lt;/code> または &lt;code>IN&lt;/code> による1回のフルスキャン」の勝負になり，&lt;code>UNION&lt;/code> の方が速い場合もある．&lt;/li>
&lt;/ul></description></item><item><title>ウェブオペレーション 読んだ</title><link>https://itkq.jp/blog/2017/01/03/web-operations/</link><pubDate>Tue, 03 Jan 2017 15:30:11 +0900</pubDate><guid>https://itkq.jp/blog/2017/01/03/web-operations/</guid><description>&lt;p>結論としては、勉強になったし読み物として面白かった。&lt;br>
オペレーションに関係するソフトウェアの特徴・比較・使い方の詳細な記述はないが、
それらの関わりが簡潔にまとめられているおかげで、体系的な理解の助けになった。&lt;/p>
&lt;p>この書籍は18の章から成っており、それぞれ著者が異なる。&lt;br>
ある章の結論が他の章の結論を直接的に否定しているわけではないが、
全体的には、ただ一つの正解は無いと言っているようで、考えさせられた。&lt;/p>
&lt;p>内容が豊富で、すべては噛み砕けていないので、また読む。&lt;/p></description></item><item><title>SQLアンチパターン 読んだ</title><link>https://itkq.jp/blog/2017/01/01/sql-antipattern/</link><pubDate>Sun, 01 Jan 2017 12:38:21 +0900</pubDate><guid>https://itkq.jp/blog/2017/01/01/sql-antipattern/</guid><description>&lt;p>インターネットに読めと言われている気がしたので読んだ。&lt;/p></description></item><item><title>夏休み読んだ本</title><link>https://itkq.jp/blog/2016/09/19/summer2016-reading/</link><pubDate>Mon, 19 Sep 2016 02:30:10 +0900</pubDate><guid>https://itkq.jp/blog/2016/09/19/summer2016-reading/</guid><description>&lt;p>今年の夏休みは本を読むぞと決めていたので成果を書く．&lt;/p></description></item><item><title>実用Git 読んだ</title><link>https://itkq.jp/blog/2016/04/04/%E5%AE%9F%E7%94%A8git-%E8%AA%AD%E3%82%93%E3%81%A0/</link><pubDate>Mon, 04 Apr 2016 02:20:25 +0900</pubDate><guid>https://itkq.jp/blog/2016/04/04/%E5%AE%9F%E7%94%A8git-%E8%AA%AD%E3%82%93%E3%81%A0/</guid><description>&lt;p>最近自分の Git に対する知識の無さを感じてきたので本を読もうと思っていたら、ちょうど借りる機会があったのでまとめた。Git コマンドの操作をより自信を持って行えるようになった気がする。&lt;/p></description></item></channel></rss>