<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chaos Engineering on itkq.jp</title><link>https://itkq.jp/tags/chaos-engineering/</link><description>Recent content in Chaos Engineering on itkq.jp</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Wed, 12 Sep 2018 23:49:16 +0900</lastBuildDate><atom:link href="https://itkq.jp/tags/chaos-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Envoy proxy と consul-template を使った Fault injection を試した</title><link>https://itkq.jp/blog/2018/09/12/envoy-consul-template-failure-injection-sample/</link><pubDate>Wed, 12 Sep 2018 23:49:16 +0900</pubDate><guid>https://itkq.jp/blog/2018/09/12/envoy-consul-template-failure-injection-sample/</guid><description>&lt;h2 id="モチベーション">モチベーション&lt;/h2>
&lt;p>サービスメッシュのための Side-car proxy として有名な &lt;a href="https://www.envoyproxy.io/" target="_blank">Envoy proxy&lt;/a> (以下 Envoy) がある。Envoy は Observability や Resiliency など便利な機能の他に、Fault Injection 機能を持つ。この Fault injection は、システム全体の可用性を向上させるためのシステム間通信の障害のエミュレートに使われるものであり、これは一般に Chaos Engineering や Resiliency Testing と呼ばれる。&lt;/p></description></item></channel></rss>